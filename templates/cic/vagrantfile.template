# -*- mode: ruby -*-
# vi: set ft=ruby :

current_version = Gem::Version.new(Vagrant::VERSION)
windows_version = Gem::Version.new("1.6.0")

Vagrant.configure("2") do |config|
  config.vm.define "vagrant-cic"
  config.vm.box = "cic"

  if current_version < windows_version
    if !Vagrant.has_plugin?('vagrant-windows')
      puts "vagrant-windows missing, please install the vagrant-windows plugin!"
      puts "Run this command in your terminal:"
      puts "vagrant plugin install vagrant-windows"
      exit 1
    end

    # Admin user name and password
    config.winrm.username = "vagrant"
    config.winrm.password = "vagrant"

    config.vm.guest = :windows
    config.windows.halt_timeout = 15

    # Port forward WinRM and RDP
    config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
    config.vm.network :forwarded_port, guest: 3389, host: 3389
  else
    config.vm.communicator = "winrm"
  end

  config.vm.provider :parallels do |provider, override|
    provider.update_guest_tools = true
    provider.memory             = 2048
    provider.cpus               = 2
  end

  config.vm.provider :vmware_fusion do |provider, override|
    provider.gui             = true
    provider.vmx['memsize']  = '2048'
    provider.vmx['numvcpus'] = '2'
  end

  config.vm.provider :virtualbox do |provider, override|
    provider.gui = true
    provider.customize ['modifyvm', :id, '--ioapic', 'on'] #To assign >1 CPUs
    provider.customize ['modifyvm', :id, '--vram',   30]
    provider.customize ['modifyvm', :id, '--memory', 2048]
    provider.customize ['modifyvm', :id, '--cpus',   2]
  end
end
